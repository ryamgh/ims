// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Role{
  @@map ("roles")
  id Int @id @default(autoincrement())
  name String @db.VarChar(40) @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  
  users User[]
}
model User {
  @@map("users")

  id Int @id @default(autoincrement())
  first_name String @db.VarChar(100)
  middle_name String? @db.VarChar(100)
  last_name String @db.VarChar(100)
  email String @db.VarChar(192) @unique
  password String @db.VarChar(191)
  role_id Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  role Role @relation(references: [id], fields: [role_id], onDelete: Cascade)
  items Item[]
}

model Item{//model name in pascal case and singular
  @@map("items")// table name in small case and plural

  id Int @id @default(autoincrement())
  user_id Int
  name String @unique
  description String? @db.Text
  quantity Int @default(0)
  price Decimal @db.Decimal(10,2) @default(0.00)
  discount Decimal @db.Decimal(5,2) @default(0.00)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  
  user User @relation(references: [id], fields: [user_id], onDelete: Cascade)

}
